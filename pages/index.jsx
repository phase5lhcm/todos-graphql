import { useState } from 'react';
import Head from 'next/head';
import GetTodoItems from '../components/TodoItem';
import { Container } from '@mui/material';
import SubmitTodoItemForm from '../components/SubmitTodoItemForm';
import EditModal from '../components/EditModal';
import { ADD_TODO, DELETE_TODO, EDIT_TODO } from '../graphql/queries';
import { useMutation } from '@apollo/client';

export default function Home() {
    const [isOpen, setIsOpen] = useState('');
    // useMutation returns a function that is then run to execute mutation query
    const [addTodoItem] = useMutation(ADD_TODO, {
        onCompleted: (data) => {
            window.location.reload();
        },
    });
    const [deleteTodoItem] = useMutation(DELETE_TODO, {
        onCompleted: (data) => {
            window.location.reload();
        },
    });
    const [editTodoItem] = useMutation(EDIT_TODO, {
        onCompleted: (data) => {
            window.location.reload();
        },
    });

    const onSubmit = (evt) => {
        evt.preventDefault();
        // alert(evt.target.text.value);
        addTodoItem({ variables: { text: evt.target.text.value } });
    };

    const onDelete = (id) => deleteTodoItem({ variables: { id } });

    const onEditSave = (evt) => {
        evt.preventDefault();
        // alert(evt.target.text.value);
        editTodoItem({
            variables: { id: isOpen, text: evt.target.updatedText.value },
        });
    };

    const onClose = () => setIsOpen('');

    const openModal = (id) => {
        setIsOpen(id);
    };

    return (
        <Container maxWidth='sm'>
            <Head>
                <title>Create Next App</title>
                <meta
                    name='description'
                    content='Generated by create next app'
                />
                <link rel='icon' href='/favicon.ico' />
            </Head>
            {/* double bangs make the condition into a boolean */}
            <EditModal
                onSubmit={onEditSave}
                isOpen={!!isOpen}
                onClose={onClose}
            />
            <SubmitTodoItemForm onSubmit={onSubmit} />
            <GetTodoItems onDelete={onDelete} openModal={openModal} />
        </Container>
    );
}
